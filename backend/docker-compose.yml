services:
  api:
    image: ghcr.io/suna-ai/suna-backend:latest
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network
    environment:
      # Database
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}

      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}

      # Application
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000}
      - WEBHOOK_BASE_URL=${WEBHOOK_BASE_URL:-http://localhost:8000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENV_MODE=${ENV_MODE:-production}

      # Add any other required API keys or variables here
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      # - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      # - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    image: ghcr.io/suna-ai/suna-backend:latest
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    command: uv run dramatiq --skip-logging --processes 4 --threads 4 run_agent_background
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network
    environment:
      # Database
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}

      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}

      # Application
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENV_MODE=${ENV_MODE:-production}

      # Add any other required API keys or variables here
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      # - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      # - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "uv", "run", "worker_health.py"]
      timeout: 20s
      interval: 30s
      start_period: 40s

  redis:
    image: redis:7-alpine # Using a more common version, but 8-alpine is also fine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network
    command: redis-server --appendonly yes --bind 0.0.0.0 --protected-mode no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
